services:
  api-training:
    build:
      context: ..
      dockerfile: docker/Dockerfile.training
    ports:
      - "8000:8000"
    volumes:
      - ../:/app
      - ../data/datasets:/app/data/datasets
      - model-weights-pet:/app/app/models/pet_detection/weights
      - model-weights-pregnancy:/app/app/models/pregnancy_detection/weights
      - model-weights-disease:/app/app/models/disease_detection/weights
      - huggingface-cache:/home/api-user/.cache/huggingface
    tmpfs:
      - /tmp:exec,size=2G
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ept_vision
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TRANSFORMERS_CACHE=/home/api-user/.cache/huggingface
      - HF_HOME=/home/api-user/.cache/huggingface
      - TMPDIR=/tmp
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug"

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    tmpfs:
      - /tmp:exec,size=1G
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ept_vision
      - TMPDIR=/tmp
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    tmpfs:
      - /tmp:exec,size=512M
    environment:
      - TMPDIR=/tmp
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  model-weights-pet:
  model-weights-pregnancy:
  model-weights-disease:
  huggingface-cache: 